@namespace tictactoeweb.Shared.DesignPatterns

@inject TicTacToeGame tictactoe

<style>
  .main-board {
    width: 60%;
    background: #add8e6;
}
.grid-container {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-areas: ". . ." ". . ." ". . .";
  }

  .boardspace {
    background-color: red;
    width: 100%;
    padding-top: 90%; /* 1:1 Aspect Ratio */
    position: relative; /* If you want text inside of it */
  }

  .text {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    text-align: center;
    font-size: 6vw;
 }

</style>
<h1>@tictactoe.winner</h1>
    <div class="main-board">
        <div class="grid-container">
        @* @foreach (var use in Params.InitData.UsagesMenu) *@
        @for (int i=0;i<9;i++)
        {
          int idx=i;
          <BlazorTicTacToeBoardSpace Idx=i TicTacToe="tictactoe" @onclick=@(()=>PlayGame(idx))/>
        } 
        </div>
    </div>
<button class="btn btn-primary" @onclick=@(()=>PlayGame())>Click me</button>
@* <button class="btn btn-primary" @onclick="PlayGame">Click me</button> *@

@code {
  private BlazorTicTacToeBoardSpace space;
  private BlazorTicTacToeBoardLine lines;
    protected override void OnInitialized()
    {
      this.space=this.getBoardSpace(); 
      this.lines=this.buildLines();
    }

    public BlazorTicTacToeBoardSpace getBoardSpace(){
      return new BlazorTicTacToeBoardSpace();
    }

    private void PlayGame(int idx=-1)
    {
        tictactoe.gamePlay(idx);
    }
    public BlazorTicTacToeBoardLine buildLines(){
      return new BlazorTicTacToeBoardLine();
    }
}
